#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

#Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading settings..."

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
firmware_nonfree=$(ynh_app_setting_get --app=$app --key=firmware_nonfree)
service_name=$(ynh_app_setting_get --app=$app --key=service_name)
phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_script_progression --message="Validating restoration parameters..."

ynh_webpath_available --domain=$domain --path_url=$path_url \
	|| ynh_die --message="Path not available: ${domain}${path_url}"
test ! -d $final_path \
	|| ynh_die --message="There is already a directory: $final_path "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the nginx configuration..."

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..."

ynh_restore_file --origin_path="$final_path"

if [[ $firmware_nonfree -eq 1 ]]; then
  # check if non-free is set on sources.list
  if ! grep -q non-free /etc/apt/sources.list ; then
    sed '/debian/{s/main/& non-free/}' -i /etc/apt/sources.list
  fi

  packages=$nonfree_packages
else
  packages=$free_packages

  ynh_restore_file --origin_path="/lib/firmware/htc_7010.fw"
  ynh_restore_file --origin_path="/lib/firmware/htc_9271.fw"
fi

ynh_restore_file --origin_path="/etc/sudoers.d/${app}_ynh"

ynh_restore_file --origin_path="/usr/local/bin/iw_multissid"
ynh_restore_file --origin_path="/usr/local/bin/iw_devices"
ynh_restore_file --origin_path="/usr/local/bin/iw_ssids"
ynh_restore_file --origin_path="/usr/local/bin/ipv6_expanded"
ynh_restore_file --origin_path="/usr/local/bin/ipv6_compressed"

for FILE in $(ls /etc/hostapd/hostapd.conf{.tpl?,} 2>/dev/null)
do
    ynh_restore_file --origin_path="$FILE"
done
ynh_restore_file --origin_path="/etc/dnsmasq.dhcpd/dhcpdv6.conf.tpl"
ynh_restore_file --origin_path="/etc/dnsmasq.dhcpd/dhcpdv4.conf.tpl"

ynh_restore_file --origin_path="/usr/local/bin/$service_name"

ynh_restore_file --origin_path="/etc/init.d/hostapd"

#=================================================
# RECREATE THE DEDICATED USER
#=================================================
ynh_script_progression --message="Recreating the dedicated system user..."

# Create the dedicated user (if not existing)
ynh_system_user_create --username=$app

#=================================================
# RESTORE USER RIGHTS
#=================================================
ynh_script_progression --message="Restoring user rights..."

# Restore permissions on app files
chown -R $app: $final_path

#=================================================
# RESTORE THE PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring PHP-FPM configuration..."

ynh_restore_file --origin_path="/etc/php/$phpversion/fpm/pool.d/$app.conf"

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Reinstalling dependencies..."

# Define and install dependencies
ynh_install_app_dependencies "$pkg_dependencies" "$packages"

#=================================================
# RESTORE SYSTEMD
#=================================================
ynh_script_progression --message="Restoring the systemd configuration..."

ynh_restore_file --origin_path="/etc/systemd/system/$service_name.service"
systemctl enable $service_name.service

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add $service_name --description "Creates a Wi-Fi access point" --log_type "systemd" --need_lock

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

wifi_device=$(bash ../settings/conf/iw_devices | awk -F\| '{ print $1 }')

if [[ -z $wifi_device ]]; then
  ynh_app_setting_set --app=$app --key=service_enabled --value=0
  wifi_device=none
else
  ynh_app_setting_set --app=$app --key=service_enabled --value=1
fi

# Start a systemd service if device is present
if [[ $wifi_device == none ]]; then
  echo "WARNING: Wifi Hotspot is not started because no wifi device was found (please, check the web admin)" >&2
else
  ynh_systemd_action --service_name=$service_name --action="start" --log_path=systemd #--line_match="Started YunoHost Wifi Hotspot"
fi

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX AND PHP-FPM
#=================================================
ynh_script_progression --message="Reloading nginx web server and php-fpm..."

ynh_systemd_action --service_name=php$phpversion-fpm --action=reload
ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app"
